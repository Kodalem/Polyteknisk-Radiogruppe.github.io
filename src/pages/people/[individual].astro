---
import Layout from '../../layouts/Layout.astro';
import BlogPost from '../../components/BlogPost.astro';
import {type MarkdownInstance} from "astro";
export const prerender = true;

export async function getStaticPaths():Promise<any> {

    const allPosts:MarkdownInstance<any>[] = Object.values(import.meta.glob('../projects/project_list_dir/*.mdx', { eager: true }));

    const uniqueLeaderPeople:any[] = [...new Set(allPosts.map((post:MarkdownInstance<any>) => post.frontmatter.team_lead).flat())];
    // Append also the assigned_people
    const uniqueAssignedPeople:any[] = [...new Set(allPosts.map((post:MarkdownInstance<any>) => post.frontmatter.assigned_people).flat())];

    return uniqueLeaderPeople.map((individual: any) => {
        const filteredPosts:MarkdownInstance<any>[] = allPosts.filter((post:MarkdownInstance<any>) => post.frontmatter.team_lead.includes(individual));
        // Remove the spaces in the individual name
        return {
            params: { individual: individual.replace(/\s+/g, '-') },
            props: { posts: filteredPosts },
        };
    });
}

const { individual } = Astro.params;
const { posts } = Astro.props;

// Print the generated url for the person
console.log(`The generated url for ${individual} is: /people/${individual}`);
---
<Layout title={individual}>
    <p>Posts tagged with {individual}</p>
    <ul>
        {(posts as Astro["props"]).map((post:any) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
    </ul>
</Layout>