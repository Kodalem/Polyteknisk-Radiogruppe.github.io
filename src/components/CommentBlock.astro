---
import Comments from '../components/Comment.astro';
import { db } from "./utils/db";
import { eq } from 'drizzle-orm';
import Comment from "../components/Comment.astro";
import CommentForm from "../components/CommentForm.astro";
import { commentsTable, projectPageTable } from "./models/schema";

import { slide } from "astro:transitions"

// Receive the slug prop
const { slug } = Astro.props;

console.log("Slug:", slug);

// Retrieve the project ID based on the slug (title)
const project = await db.query.projectPageTable.findFirst({
    where: eq(projectPageTable.title, slug as string)
});
const projectId = project?.project_id?.toString() || null;

// Handle POST request to add a new comment
if (Astro.request.method === 'POST') {
    try {
        const data = await Astro.request.formData();
        const author = data.get('author')?.toString() || null;
        const content = data.get('content')?.toString() || null;

        console.log("Data to be inserted:", { projectId, author, content });

        if (projectId && author && content) {
            await db.insert(commentsTable).values({
                name: author,
                content: content,
                project_id: projectId
            });
        } else {
            console.error("Invalid data: ", { projectId, author, content });
        }
    } catch (error) {
        console.error("Error inserting comment: ", error);
    }
}

// Retrieve comments for the current project
const comments = await db.query.commentsTable.findMany({
    where: eq(commentsTable.project_id, projectId || "")
});
---

<div class="my-8 mx-auto max-w-2xl px-4"  transition:animate={slide({ duration: '0.6667s' })}>
    <h1 class="text-2xl font-bold text-gray-900 mb-6"  transition:animate={slide({ duration: '0.6667s' })}>Comments</h1>
    <ul class="list-none space-y-4"  transition:animate={slide({ duration: '0.6667s' })}>
        {comments.map((comment:any) => <Comment comment={comment} />)}
    </ul>
    <CommentForm projectId={projectId} />
</div>

<style>
</style>